/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2022-05-05 10:38:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.learn.helper.Helper;
import com.learn.entities.Category;
import com.learn.dao.CategoryDao;
import org.hibernate.internal.build.AllowSysOut;
import org.apache.jasper.tagplugins.jstl.core.ForEach;
import java.util.List;
import com.learn.entities.Product;
import org.dom4j.util.ProxyDocumentFactory;
import com.learn.dao.ProductDao;
import com.learn.helper.FactoryProvider;
import com.learn.entities.User;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/components/common_css_js.jsp", Long.valueOf(1651740149898L));
    _jspx_dependants.put("/components/common_modals.jsp", Long.valueOf(1651738798725L));
    _jspx_dependants.put("/components/navbar.jsp", Long.valueOf(1651746971120L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.learn.entities.Product");
    _jspx_imports_classes.add("com.learn.helper.FactoryProvider");
    _jspx_imports_classes.add("com.learn.helper.Helper");
    _jspx_imports_classes.add("com.learn.dao.ProductDao");
    _jspx_imports_classes.add("org.apache.jasper.tagplugins.jstl.core.ForEach");
    _jspx_imports_classes.add("com.learn.entities.Category");
    _jspx_imports_classes.add("com.learn.dao.CategoryDao");
    _jspx_imports_classes.add("org.dom4j.util.ProxyDocumentFactory");
    _jspx_imports_classes.add("com.learn.entities.User");
    _jspx_imports_classes.add("org.hibernate.internal.build.AllowSysOut");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>MyCart -Home</title>\n");
      out.write("<!-- Css -->\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\n");
      out.write("<link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\n");
      out.write("\n");
      out.write("<!-- JavaScript -->\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\" integrity=\"sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=\" crossorigin=\"anonymous\"></script>\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write(" \n");
      out.write("<script src=\"js/script.js\"></script>\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write(".product-card:hover{\n");
      out.write("    background:#e2e2e2;\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write('\n');

User user1 = (User) session.getAttribute("current-user");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark custom-bg\">\n");
      out.write("\n");
      out.write("	<div class=\"container\">\n");
      out.write("\n");
      out.write("		<a class=\"navbar-brand\" href=\"index.jsp\">MyCart</a>\n");
      out.write("		<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n");
      out.write("			data-target=\"#navbarSupportedContent\"\n");
      out.write("			aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n");
      out.write("			aria-label=\"Toggle navigation\">\n");
      out.write("			<span class=\"navbar-toggler-icon\"></span>\n");
      out.write("		</button>\n");
      out.write("\n");
      out.write("\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n");
      out.write("			<ul class=\"navbar-nav mr-auto\">\n");
      out.write("				<li class=\"nav-item active\"><a class=\"nav-link\"\n");
      out.write("					href=\"index.jsp\">Home <span class=\"sr-only\">(current)</span>\n");
      out.write("				</a></li>\n");
      out.write("				<li class=\"nav-item dropdown\"><a\n");
      out.write("					class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\"\n");
      out.write("					role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n");
      out.write("					aria-expanded=\"false\"> categories </a>\n");
      out.write("					<div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n");
      out.write("						<a class=\"dropdown-item\" href=\"#\">Action</a> <a\n");
      out.write("							class=\"dropdown-item\" href=\"#\">Another action</a>\n");
      out.write("						<div class=\"dropdown-divider\"></div>\n");
      out.write("						<a class=\"dropdown-item\" href=\"#\">Something else here</a>\n");
      out.write("					</div></li>\n");
      out.write("			</ul>\n");
      out.write("			<ul class=\"navbar-nav ml-auto\">\n");
      out.write("			\n");
      out.write("				<li class=\"nav-item active\">\n");
      out.write("                    <a class=\"nav-link\" href=\"#!\" data-toggle=\"modal\" data-target=\"#cart\">  <i class=\"fa fa-cart-plus\"  style=\"font-size: 20px;\"></i> <span class=\"ml-0 cart-items\">( 0 )</span>  </a>\n");
      out.write("                </li>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("				<!--Conditional Rendering  -->\n");
      out.write("				");

				if (user1 == null) {
				
      out.write("\n");
      out.write("				<li class=\"nav-item active\"><a class=\"nav-link\"\n");
      out.write("					href=\"login.jsp\">Login</a></li>\n");
      out.write("\n");
      out.write("				<li class=\"nav-item active\"><a class=\"nav-link\"\n");
      out.write("					href=\"register.jsp\">Register</a></li>\n");
      out.write("\n");
      out.write("				");

				} else {
				
      out.write("\n");
      out.write("				<li class=\"nav-item active\"><a class=\"nav-link\" href=\"");
      out.print( user1.getUserType().equals("admin")?"admin.jsp":"normal.jsp" );
      out.write('"');
      out.write('>');
      out.print(user1.getUserName());
      out.write("</a></li>\n");
      out.write("\n");
      out.write("				<li class=\"nav-item active\"><a class=\"nav-link\" href=\"LogoutServlet\">Logout</a></li>\n");
      out.write("				");

				}
				
      out.write("\n");
      out.write("\n");
      out.write("			</ul>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("</nav>");
      out.write("\n");
      out.write("<div class=\"container-fluid\">\n");
      out.write("<div class=\"row mt-3 mx-2\">\n");
      out.write("\n");
      out.write("	");

	
		String cat=request.getParameter("category");
//		out.println(cat);
		
//		Integer cat1=Integer.valueOf(cat);
//		out.println(cat1);
		
		
		ProductDao productdao=new ProductDao(FactoryProvider.getFactory());
		List<Product> list=null;
		
		if (cat == null || cat.trim().equals("all")) {
            list = productdao.getAllProducts();;

        } else {

            int cid = Integer.valueOf(cat.trim());
            list = productdao.getAllProductsById(cid);

        }
		
		CategoryDao categoryDao=new CategoryDao(FactoryProvider.getFactory());
		List<Category> cList=categoryDao.getCategories();
	
      out.write("\n");
      out.write("\n");
      out.write("	<!-- Show Category -->\n");
      out.write("	<div class=\"col-md-2\">\n");
      out.write("		<!--  <h3>Number Of Category ");
      out.print( cList.size() );
      out.write("</h3>-->\n");
      out.write("		\n");
      out.write("		<div class=\"list-group mt-3\">\n");
      out.write(" 			 <a href=\"index.jsp?category=all\" class=\"list-group-item list-group-item-action active\" aria-current=\"true\">All Products</a>		\n");
      out.write("				");

				for(Category category:cList)
				{
				
      out.write("	\n");
      out.write("					<a href=\"index.jsp?category=");
      out.print( category.getCategoryId());
      out.write("\" class=\"list-group-item list-group-item-action\">");
      out.print( category.getCategoryTitle() );
      out.write("</a>		\n");
      out.write("				");
 	
				}
				
      out.write("\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	<!-- Show Products -->\n");
      out.write("	<div class=\"col-md-10\">\n");
      out.write("		<!-- <h3>Number Of Products is ");
      out.print( list.size() );
      out.write("</h3> -->\n");
      out.write("		<!-- \n");
      out.write("		");
 
			for(Product product:list)
			{
				out.println(product.getpPhoto()+"<br>");
				out.println(product.getpName()+"<br><br>");
			}
		
      out.write("		\n");
      out.write("		-->	\n");
      out.write("		<!-- Product Card -->\n");
      out.write("		<div class=\"mt-3\">\n");
      out.write("			<!-- Col:12 -->\n");
      out.write("			<div class=\"col-md-12\">\n");
      out.write("				<div class=\"card-columns\">\n");
      out.write("					<!-- Traversing Products -->\n");
      out.write("					");

						for(Product product: list)
						{	
					
      out.write("\n");
      out.write("						<div class=\"card product-card\">\n");
      out.write("							 <div class=\"container text-center\">\n");
      out.write("							 <img src=\"img/products/");
      out.print( product.getpPhoto() );
      out.write("\" style=\"max-height: 150px; max-width: 90%;width:auto;\" class=\"card-img-top m-2\" alt=\"...\">\n");
      out.write("							 </div>\n");
      out.write("							<div class=\"card-body\">\n");
      out.write("									<h5 class=\"card-title\">");
      out.print( product.getpName() );
      out.write("</h5>\n");
      out.write("									<p class=\"card-text\">");
      out.print( Helper.get10Words(product.getpDesc()) );
      out.write("</p>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"card-footer text-center\">\n");
      out.write("								<button class=\"btn custom-bg text-white\" onclick=\"add_to_cart(");
      out.print( product.getpId());
      out.write(',');
      out.write(' ');
      out.write('\'');
      out.print( product.getpName());
      out.write('\'');
      out.write(',');
      out.print( product.getPriceAfterApplyingDiscount());
      out.write(")\">Add to Card</button>\n");
      out.write("								<button class=\"btn btn-outline-success \">&#8377 ");
      out.print( product.getPriceAfterApplyingDiscount() );
      out.write("/- <span class=\"text-secondary discount-label\">&#8377; ");
      out.print( product.getpPrice());
      out.write(' ');
      out.write(',');
      out.print( product.getpDiscount());
      out.write("% Off</span></button>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("					");
  
						}
					if(list.size()==0)
					{
						out.println("<h3>No Item In This Category</h3>");
					}
					
      out.write("\n");
      out.write("				\n");
      out.write("				 </div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("<!-- Button trigger modal -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Modal -->\r\n");
      out.write("<div class=\"modal fade\" id=\"cart\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h5 class=\"modal-title\" id=\"exampleModalLabel\">You cart </h5>\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                    <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                </button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"cart-body\">\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary checkout-btn\" onclick=\"goToCheckout()\">Checkout</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"toast\">This is our custom Toast text</div>\r\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
